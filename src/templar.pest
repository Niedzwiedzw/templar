WHITESPACE = _{ " " | "\t" | "\n" | "\r" }
COMMENT = _{ "{#" ~ (!"#}" ~ ANY)* ~ "#}" }

// A whole template, whitespace on either end will be trimmed
template = ${ SOI ~ WHITESPACE* ~ (raw_block | template_block)+ ~ WHITESPACE* ~ EOI }

// Template expressions
expression        = _{ (inner | literal | function | value) ~ operation* }
expression_cap    = !{ expression }
expression_vararg = _{ (expression_cap ~ ("," ~ expression_cap)*)? }
inner             = _{ "(" ~ expression_cap ~ ")" }
args              = { "(" ~ expression_vararg ~ ")" }

// Blocks, containing templates or other chunks of data
raw_block      = @{ (!"{{" ~ ANY)+ }
template_block = !{ "{{" ~ (!"}}" ~ expression) ~ "}}" }

// Operations
operation = _{ ( oper | filter ) }
filter    = { "|" ~ ident ~ args? }
function  = { ident ~ args }
oper  = _{ op ~ expression }

// Identifiers
ident      = ${ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")*? }
value_key  = ${ "[" ~ string_lit ~ "]"}
value_id   = _{ ( "." ~ ident) | value_key }
root_ident = _{ "." }
value      = @{ (ident | root_ident) ~ (value_id)* }

// Literals
literal     = _{ (bool_lit | number_lit | string_lit | null_lit | array_lit | map_lit) ~ !ASCII_ALPHANUMERIC }
literal_cap = ${ literal }
bool_lit    = _{ true_lit | false_lit }
true_lit    = { "true" | "yes" }
false_lit   = { "false" | "no" }
null_lit    = { "null" | "nil" }
number_lit  = @{ "-"? ~ ASCII_DIGIT+ }
string_lit  = ${ "'" ~ str_single ~ "'" }
str_single  = @{ (!"'" ~ ("\\'" | ANY))* }
array_lit   = { "[" ~ expression_vararg  ~ "]"}
map_lit     = !{ "{" ~ (map_kvp ~ ("," ~ map_kvp)*)? ~ "}" }
map_kvp     = _{ literal_cap ~ ":" ~ expression_cap }

// All comparitive operators
op  = _{ op_add | op_sub | op_div | op_mlt | op_mod | op_and | op_or | op_eq | op_ne | op_gt | op_gte | op_lt | op_lte | op_cat }
op_and = { "&&" }
op_or  = { "||" }
op_eq  = { "==" }
op_ne  = { "!=" }
op_gt  = { ">"  }
op_gte = { ">=" }
op_lt  = { "<"  }
op_lte = { "<=" }
op_add = { "+" }
op_sub = { "-" }
op_div = { "/" }
op_mlt = { "*" }
op_mod = { "%" }
op_cat = { "~" }
