name: Publish Artifacts
on: push

jobs:
  build:
    name: Publish release artifacts

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            toolchain: stable
            target: x86_64-unknown-linux-gnu
            use-cross: false
            tar-xz: true
            strip: true
            ext: ''
          - os: ubuntu-latest
            toolchain: stable
            target: x86_64-unknown-linux-musl
            use-cross: true
            tar-xz: true
            strip: false
            ext: ''
          - os: ubuntu-latest
            toolchain: stable
            target: aarch64-unknown-linux-gnu
            use-cross: true
            tar-xz: true
            strip: false
            ext: ''
          - os: ubuntu-latest
            toolchain: stable
            target: aarch64-unknown-linux-musl
            use-cross: true
            tar-xz: true
            strip: false
            ext: ''
          - os: ubuntu-latest
            toolchain: stable
            target: armv7-unknown-linux-gnueabihf
            use-cross: true
            tar-xz: true
            strip: false
            ext: ''
          - os: windows-latest
            toolchain: stable-msvc
            target: x86_64-pc-windows-msvc
            use-cross: false
            tar-xz: false
            strip: false
            ext: '.exe'
          - os: windows-latest
            toolchain: stable
            target: x86_64-pc-windows-gnu
            use-cross: false
            tar-xz: false
            strip: false
            ext: '.exe'
          - os: macos-latest
            toolchain: stable
            target: x86_64-apple-darwin
            use-cross: false
            tar-xz: false
            strip: false
            ext: ''

    runs-on: '${{ matrix.os }}'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: '${{ matrix.target }}'

      - name: 'Build binary for ${{ matrix.target }}'
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.use-cross }}
          command: build
          args: '--all-features --target ${{ matrix.target }} --release'

      - name: 'Build binary for ${{ matrix.target }}'
        uses: actions-rs/cargo@v1
        if: matrix.strip
        with:
          use-cross: ${{ matrix.use-cross }}
          command: install
          args: 'cargo-strip'

      - name: 'Strip build binaries'
        uses: actions-rs/cargo@v1
        if: matrix.strip
        with:
          use-cross: ${{ matrix.use-cross }}
          command: strip
          args: '--target ${{ matrix.target }}'

      - name: Create tar.xz package
        if: matrix.tar-xz
        run: |-
              mkdir -p 'target/package'
              tar -C 'target/${{ matrix.target }}/release/' -cvJf 'target/package/templar-${{ matrix.target }}.tar.xz' 'templar'

      - name: Upload artifacts to this build
        uses: actions/upload-artifact@master
        if: matrix.tar-xz
        with:
          name: tar-package
          path: target/packages/
